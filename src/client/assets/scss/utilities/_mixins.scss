// ==========================================================================
// Mixins
// ==========================================================================
// Prefix
@mixin transition($transition) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin border-radius($top-left,$top-right,$bottom-right,$bottom-left) {
    border-radius: $top-left $top-right $bottom-right $bottom-left;
    -webkit-border-radius: $top-left $top-right $bottom-right $bottom-left;
    -moz-border-radius: $top-left $top-right $bottom-right $bottom-left;
}
@mixin darkenBgColor($baseColor){
    background-color: $baseColor;
    &:hover{
          background-color: darken($baseColor, 5%);
    }
}
@mixin lightenBgColor($baseColor){
    background-color: $baseColor;
    &:hover,&:focus{
          background-color: lighten($baseColor, 30%);
    }
}
@mixin ultraLightenBgColor($baseColor){
    background-color: $baseColor;
    &:hover,&:focus{
          background-color: lighten($baseColor, 10%)!important;
    }
}
@mixin lightenColor($baseColor){
    color: $baseColor;
    &:hover,&:focus{
          color: lighten($baseColor, 70%);
    }
}

// Media queries

@mixin mq($break) {
  @if $break == "x-small" {
    @media (min-width: $brkpoint-xs) and (max-width: $brkpoint-sm) {
      @content;
    }
  }
  @else if $break == "small" {
    @media (min-width: $brkpoint-xs) and (max-width: $brkpoint-md){
      @content;
    }
  }
  @else if $break == "medium" {
    @media (min-width: $brkpoint-md + 1) {
      @content;
    }
  }
  @else if $break == "large" {
    @media (min-width: $brkpoint-lg) {
      @content;
    }
  }
}